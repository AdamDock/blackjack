{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const chipsSlice=createSlice({name:'chips',initialState:{pot:0,pot2:0,stack:5000},reducers:{addChips:(state,action)=>{state.pot+=action.payload;state.stack-=action.payload;},removeChips:state=>{state.pot=0;},removeChips2:state=>{state.pot2=0;},resetChips:(state,action)=>{state.stack+=state.pot;state.pot=0;},winChips:state=>{state.stack+=state.pot*2;state.pot=0;},winChips2:state=>{state.stack+=state.pot2*2;state.pot2=0;},doubleChips:state=>{state.stack-=state.pot;state.pot+=state.pot;},doubleChips2:state=>{state.stack-=state.pot2;state.pot2+=state.pot2;},splitChips:state=>{state.pot2=state.pot;state.stack-=state.pot;}}});export const{removeChips2,winChips2,doubleChips2,splitChips,addChips,removeChips,resetChips,doubleChips,winChips}=chipsSlice.actions;export const chipsReducer=chipsSlice.reducer;","map":{"version":3,"names":["createSlice","chipsSlice","name","initialState","pot","pot2","stack","reducers","addChips","state","action","payload","removeChips","removeChips2","resetChips","winChips","winChips2","doubleChips","doubleChips2","splitChips","actions","chipsReducer","reducer"],"sources":["/Users/adamdockstader/repos/blackjack/src/store/slices/chipsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst chipsSlice = createSlice({\n    name: 'chips',\n    initialState: {\n        pot: 0,\n        pot2: 0,\n        stack: 5000\n    },\n    reducers: {\n        addChips: (state, action) => {\n            state.pot += action.payload;\n            state.stack -= action.payload;\n        },\n        removeChips: (state) => {\n            state.pot = 0;\n        },\n        removeChips2: (state) => {\n            state.pot2 = 0;\n        },\n        resetChips: (state, action) => {\n            state.stack += state.pot;\n            state.pot = 0;\n        },\n        winChips: (state) => {\n            state.stack += state.pot*2;\n            state.pot = 0;\n        },\n        winChips2: (state) => {\n            state.stack += state.pot2*2;\n            state.pot2 = 0;\n        },\n        doubleChips: (state) => {\n            state.stack -= state.pot;\n            state.pot += state.pot;\n        },\n        doubleChips2: (state) => {\n            state.stack -= state.pot2;\n            state.pot2 += state.pot2;\n        },\n        splitChips: (state) => {\n            state.pot2 = state.pot;\n            state.stack -= state.pot;\n        },\n\n    },\n});\n\nexport const { removeChips2, winChips2, doubleChips2, splitChips, addChips, removeChips, resetChips, doubleChips, winChips } = chipsSlice.actions;\nexport const chipsReducer = chipsSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,UAAU,CAAGD,WAAW,CAAC,CAC3BE,IAAI,CAAE,OAAO,CACbC,YAAY,CAAE,CACVC,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPC,KAAK,CAAE,IACX,CAAC,CACDC,QAAQ,CAAE,CACNC,QAAQ,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACzBD,KAAK,CAACL,GAAG,EAAIM,MAAM,CAACC,OAAO,CAC3BF,KAAK,CAACH,KAAK,EAAII,MAAM,CAACC,OAAO,CACjC,CAAC,CACDC,WAAW,CAAGH,KAAK,EAAK,CACpBA,KAAK,CAACL,GAAG,CAAG,CAAC,CACjB,CAAC,CACDS,YAAY,CAAGJ,KAAK,EAAK,CACrBA,KAAK,CAACJ,IAAI,CAAG,CAAC,CAClB,CAAC,CACDS,UAAU,CAAEA,CAACL,KAAK,CAAEC,MAAM,GAAK,CAC3BD,KAAK,CAACH,KAAK,EAAIG,KAAK,CAACL,GAAG,CACxBK,KAAK,CAACL,GAAG,CAAG,CAAC,CACjB,CAAC,CACDW,QAAQ,CAAGN,KAAK,EAAK,CACjBA,KAAK,CAACH,KAAK,EAAIG,KAAK,CAACL,GAAG,CAAC,CAAC,CAC1BK,KAAK,CAACL,GAAG,CAAG,CAAC,CACjB,CAAC,CACDY,SAAS,CAAGP,KAAK,EAAK,CAClBA,KAAK,CAACH,KAAK,EAAIG,KAAK,CAACJ,IAAI,CAAC,CAAC,CAC3BI,KAAK,CAACJ,IAAI,CAAG,CAAC,CAClB,CAAC,CACDY,WAAW,CAAGR,KAAK,EAAK,CACpBA,KAAK,CAACH,KAAK,EAAIG,KAAK,CAACL,GAAG,CACxBK,KAAK,CAACL,GAAG,EAAIK,KAAK,CAACL,GAAG,CAC1B,CAAC,CACDc,YAAY,CAAGT,KAAK,EAAK,CACrBA,KAAK,CAACH,KAAK,EAAIG,KAAK,CAACJ,IAAI,CACzBI,KAAK,CAACJ,IAAI,EAAII,KAAK,CAACJ,IAAI,CAC5B,CAAC,CACDc,UAAU,CAAGV,KAAK,EAAK,CACnBA,KAAK,CAACJ,IAAI,CAAGI,KAAK,CAACL,GAAG,CACtBK,KAAK,CAACH,KAAK,EAAIG,KAAK,CAACL,GAAG,CAC5B,CAEJ,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAES,YAAY,CAAEG,SAAS,CAAEE,YAAY,CAAEC,UAAU,CAAEX,QAAQ,CAAEI,WAAW,CAAEE,UAAU,CAAEG,WAAW,CAAEF,QAAS,CAAC,CAAGd,UAAU,CAACmB,OAAO,CACjJ,MAAO,MAAM,CAAAC,YAAY,CAAGpB,UAAU,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}