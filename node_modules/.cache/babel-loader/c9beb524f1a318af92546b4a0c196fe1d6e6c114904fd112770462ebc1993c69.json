{"ast":null,"code":"var _jsxFileName = \"/Users/adamdockstader/repos/blackjack/my-app/src/components/Chips/ChipsList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Chip from \"./Chip\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChipsList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    stack,\n    pot\n  } = useSelector(state => state.chips);\n  const handleChipClick = amount => {\n    dispatch({\n      type: \"chips/addChips\",\n      payload: amount\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex bg-yellow-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChipClick(100),\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        onClick: handleChipClick,\n        amount: 1,\n        color: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        onClick: handleChipClick,\n        amount: 5,\n        color: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        onClick: handleChipClick,\n        amount: 10,\n        color: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        onClick: handleChipClick,\n        amount: 25,\n        color: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        onClick: handleChipClick,\n        amount: 50,\n        color: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        onClick: handleChipClick,\n        amount: 100,\n        color: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        onClick: handleChipClick,\n        amount: stack,\n        color: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: chips\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChipsList, \"Hp1zJ+sybzLlBrUM/7unN5xtTM0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ChipsList;\nexport default ChipsList;\nvar _c;\n$RefreshReg$(_c, \"ChipsList\");","map":{"version":3,"names":["React","Chip","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","ChipsList","_s","dispatch","stack","pot","state","chips","handleChipClick","amount","type","payload","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/components/Chips/ChipsList.tsx"],"sourcesContent":["import React from 'react';\nimport Chip from \"./Chip\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addChips } from \"../../store/index\";\n\nconst ChipsList = () => {\n  const dispatch = useDispatch();\n  const {stack, pot}  = useSelector((state: any) => state.chips);\n  \n  const handleChipClick = (amount: number) => {\n    dispatch({ type: \"chips/addChips\", payload: amount });\n  }\n\n  return (\n    <>\n      <div className=\"flex bg-yellow-500\">\n        <button onClick={() => handleChipClick(100)}>\n          <h4>Reset</h4>\n        </button>\n        <Chip onClick={handleChipClick} amount={1} color={\"Red\"} />\n        <Chip onClick={handleChipClick} amount={5} color={\"Red\"} />\n        <Chip onClick={handleChipClick} amount={10} color={\"Red\"} />\n        <Chip onClick={handleChipClick} amount={25} color={\"Red\"} />\n        <Chip onClick={handleChipClick} amount={50} color={\"Red\"} />\n        <Chip onClick={handleChipClick} amount={100} color={\"Red\"} />\n        <Chip onClick={handleChipClick} amount={stack} color={\"Red\"} />\n        <div className='flex flex-col'>\n          <div>\n            {chips}\n          </div>\n          <div>\n            {}\n          </div>\n        </div>\n        \n      </div>\n    </>\n  )\n}\n\nexport default ChipsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}