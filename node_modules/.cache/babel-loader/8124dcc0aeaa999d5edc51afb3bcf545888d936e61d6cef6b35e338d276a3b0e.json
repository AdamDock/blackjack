{"ast":null,"code":"var _jsxFileName = \"/Users/adamdockstader/repos/blackjack/my-app/src/components/Chips/Chip.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chip = ({\n  amount,\n  color,\n  onClick,\n  ...rest\n}) => {\n  _s();\n  const {\n    stack,\n    pot\n  } = useSelector(state => state.chips);\n  const handleClick = event => {\n    if (onClick) {\n      onClick(amount);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleClick,\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"bg-transparent\",\n      src: \"/pokerchip.png\",\n      alt: \"poker chip\",\n      width: \"100%\",\n      height: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Chip, \"8b07yPg0ySbt0cavK57hVzNMMIk=\", false, function () {\n  return [useSelector];\n});\n_c = Chip;\nexport default Chip;\nvar _c;\n$RefreshReg$(_c, \"Chip\");","map":{"version":3,"names":["React","useSelector","jsxDEV","_jsxDEV","Chip","amount","color","onClick","rest","_s","stack","pot","state","chips","handleClick","event","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","width","height","_c","$RefreshReg$"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/components/Chips/Chip.tsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from \"react-redux\";\n\ninterface ChipProps extends Omit<React.HTMLProps<HTMLDivElement>, 'onClick'> {\n  amount: number;\n  color: string;\n  onClick?: (amount: number) => void;\n}\n\nconst Chip: React.FC<ChipProps> = ({ amount, color, onClick, ...rest }) => {\n    const {stack, pot}  = useSelector((state: any) => state.chips);\n  const handleClick: React.MouseEventHandler<HTMLDivElement> = event => {\n    if (onClick) {\n      onClick(amount);\n    }\n  };\n\n  return (\n    <div onClick={handleClick} {...rest}>\n      <div>{amount}</div>\n      <img\n        className=\"bg-transparent\"\n        src=\"/pokerchip.png\"\n        alt=\"poker chip\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    </div>\n  );\n};\n\nexport default Chip;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1C,MAAMC,IAAyB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM;IAACC,KAAK;IAAEC;EAAG,CAAC,GAAIV,WAAW,CAAEW,KAAU,IAAKA,KAAK,CAACC,KAAK,CAAC;EAChE,MAAMC,WAAoD,GAAGC,KAAK,IAAI;IACpE,IAAIR,OAAO,EAAE;MACXA,OAAO,CAACF,MAAM,CAAC;IACjB;EACF,CAAC;EAED,oBACEF,OAAA;IAAKI,OAAO,EAAEO,WAAY;IAAA,GAAKN,IAAI;IAAAQ,QAAA,gBACjCb,OAAA;MAAAa,QAAA,EAAMX;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnBjB,OAAA;MACEkB,SAAS,EAAC,gBAAgB;MAC1BC,GAAG,EAAC,gBAAgB;MACpBC,GAAG,EAAC,YAAY;MAChBC,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CApBIL,IAAyB;EAAA,QACLH,WAAW;AAAA;AAAAyB,EAAA,GAD/BtB,IAAyB;AAsB/B,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}