{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { chipsReducer, addChips, removeChips, resetChips, doubleChips, winChips } from './slices/chipsSlice';\nimport { gameReducer, setBetStage, setDealStage, setEvaluateStage, setScore, setSplitActive, setTextOutcome, setDealerTurnComplete, setGameOver } from './slices/gameSlice';\nimport { playerReducer, setPlayerBet, setPlayerScore, playerDealCard, playerSplit, playerDealCard2 } from './slices/playerSlice';\nimport { dealerReducer, setDealerScore, dealerDealCard } from './slices/dealerSlice';\nconst store = configureStore({\n  reducer: {\n    chips: chipsReducer,\n    game: gameReducer,\n    player: playerReducer,\n    dealer: dealerReducer\n  }\n});\nexport { store, addChips, removeChips, resetChips, doubleChips, winChips, setBetStage, setDealStage, setEvaluateStage, setScore, setSplitActive, setTextOutcome, setDealerTurnComplete, setGameOver, setPlayerBet, setPlayerScore, playerDealCard, playerSplit, playerDealCard2, setDealerScore, dealerDealCard };","map":{"version":3,"names":["configureStore","chipsReducer","addChips","removeChips","resetChips","doubleChips","winChips","gameReducer","setBetStage","setDealStage","setEvaluateStage","setScore","setSplitActive","setTextOutcome","setDealerTurnComplete","setGameOver","playerReducer","setPlayerBet","setPlayerScore","playerDealCard","playerSplit","playerDealCard2","dealerReducer","setDealerScore","dealerDealCard","store","reducer","chips","game","player","dealer"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/store/index.tsx"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { chipsReducer, addChips, removeChips, resetChips, doubleChips, winChips } from './slices/chipsSlice';\nimport { gameReducer, setBetStage, setDealStage, setEvaluateStage, setScore, setSplitActive, setTextOutcome, setDealerTurnComplete, setGameOver } from './slices/gameSlice';\nimport { playerReducer, setPlayerBet, setPlayerScore, playerDealCard, playerSplit, playerDealCard2 } from './slices/playerSlice';\nimport { dealerReducer, setDealerScore, dealerDealCard, resetDealerHand } from './slices/dealerSlice';\n\nconst store = configureStore({\n    reducer: {\n        chips: chipsReducer,\n        game: gameReducer,\n        player: playerReducer,\n        dealer: dealerReducer,\n    },\n });\n\n\nexport { store, \n    addChips, removeChips, resetChips, doubleChips, winChips,\n    setBetStage, setDealStage, setEvaluateStage, setScore, setSplitActive, setTextOutcome, setDealerTurnComplete, setGameOver,\n    setPlayerBet, setPlayerScore, playerDealCard, playerSplit, playerDealCard2,\n    setDealerScore, dealerDealCard,\n    \n\n\n};\n\n\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,qBAAqB;AAC5G,SAASC,WAAW,EAAEC,WAAW,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,WAAW,QAAQ,oBAAoB;AAC3K,SAASC,aAAa,EAAEC,YAAY,EAAEC,cAAc,EAAEC,cAAc,EAAEC,WAAW,EAAEC,eAAe,QAAQ,sBAAsB;AAChI,SAASC,aAAa,EAAEC,cAAc,EAAEC,cAAc,QAAyB,sBAAsB;AAErG,MAAMC,KAAK,GAAGzB,cAAc,CAAC;EACzB0B,OAAO,EAAE;IACLC,KAAK,EAAE1B,YAAY;IACnB2B,IAAI,EAAErB,WAAW;IACjBsB,MAAM,EAAEb,aAAa;IACrBc,MAAM,EAAER;EACZ;AACH,CAAC,CAAC;AAGH,SAASG,KAAK,EACVvB,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAEC,QAAQ,EACxDE,WAAW,EAAEC,YAAY,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,WAAW,EACzHE,YAAY,EAAEC,cAAc,EAAEC,cAAc,EAAEC,WAAW,EAAEC,eAAe,EAC1EE,cAAc,EAAEC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}