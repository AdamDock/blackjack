{"ast":null,"code":"// Card.ts\nexport class Card {\n  constructor(suit, rank) {\n    this.suit = void 0;\n    this.rank = void 0;\n    this.suit = suit;\n    this.rank = rank;\n  }\n  getImageUrl() {\n    const formattedRank = this.rank === '10' ? '0' : this.rank; // Handle '10' rank\n    return `https://www.deckofcardsapi.com/static/img/${formattedRank}${this.suit.charAt(0).toUpperCase()}.png`;\n  }\n}\n\n// Deck.ts\nexport class Deck {\n  constructor() {\n    this.cards = void 0;\n    this.cards = [];\n    this.initializeDeck();\n  }\n  initializeDeck() {\n    const suits = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\n    const ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    suits.forEach(suit => {\n      ranks.forEach(rank => {\n        const card = new Card(suit, rank);\n        this.cards.push(card);\n      });\n    });\n  }\n  shuffle() {\n    // Fisher-Yates shuffle algorithm\n    for (let i = this.cards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [this.cards[i], this.cards[j]] = [this.cards[j], this.cards[i]];\n    }\n  }\n  dealCard() {\n    if (this.cards.length === 0) {\n      console.error('No cards left in the deck.');\n      return null;\n    }\n    return this.cards.pop();\n  }\n  resetDeck() {\n    this.cards = [];\n    this.initializeDeck();\n    this.shuffle();\n  }\n}","map":{"version":3,"names":["Card","constructor","suit","rank","getImageUrl","formattedRank","charAt","toUpperCase","Deck","cards","initializeDeck","suits","ranks","forEach","card","push","shuffle","i","length","j","Math","floor","random","dealCard","console","error","pop","resetDeck"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/components/cards.tsx"],"sourcesContent":["// Card.ts\nexport class Card {\n    suit: string;\n    rank: string;\n  \n    constructor(suit: string, rank: string) {\n      this.suit = suit;\n      this.rank = rank;\n    }\n  \n    getImageUrl(): string {\n      const formattedRank = this.rank === '10' ? '0' : this.rank; // Handle '10' rank\n      return `https://www.deckofcardsapi.com/static/img/${formattedRank}${this.suit.charAt(0).toUpperCase()}.png`;\n    }\n  }\n  \n  // Deck.ts\n  export class Deck {\n    cards: Card[];\n  \n    constructor() {\n      this.cards = [];\n      this.initializeDeck();\n    }\n  \n    initializeDeck(): void {\n      const suits: string[] = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\n      const ranks: string[] = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  \n      suits.forEach((suit) => {\n        ranks.forEach((rank) => {\n          const card = new Card(suit, rank);\n          this.cards.push(card);\n        });\n      });\n    }\n  \n    shuffle(): void {\n      // Fisher-Yates shuffle algorithm\n      for (let i = this.cards.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [this.cards[i], this.cards[j]] = [this.cards[j], this.cards[i]];\n      }\n    }\n  \n    dealCard(): Card | null {\n      if (this.cards.length === 0) {\n        console.error('No cards left in the deck.');\n        return null;\n      }\n      return this.cards.pop()!;\n    }\n  \n    resetDeck(): void {\n      this.cards = [];\n      this.initializeDeck();\n      this.shuffle();\n    }\n  }\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,IAAI,CAAC;EAIdC,WAAWA,CAACC,IAAY,EAAEC,IAAY,EAAE;IAAA,KAHxCD,IAAI;IAAA,KACJC,IAAI;IAGF,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;EAEAC,WAAWA,CAAA,EAAW;IACpB,MAAMC,aAAa,GAAG,IAAI,CAACF,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,CAACA,IAAI,CAAC,CAAC;IAC5D,OAAQ,6CAA4CE,aAAc,GAAE,IAAI,CAACH,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAE,MAAK;EAC7G;AACF;;AAEA;AACA,OAAO,MAAMC,IAAI,CAAC;EAGhBP,WAAWA,CAAA,EAAG;IAAA,KAFdQ,KAAK;IAGH,IAAI,CAACA,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB;EAEAA,cAAcA,CAAA,EAAS;IACrB,MAAMC,KAAe,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;IACjE,MAAMC,KAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAE1FD,KAAK,CAACE,OAAO,CAAEX,IAAI,IAAK;MACtBU,KAAK,CAACC,OAAO,CAAEV,IAAI,IAAK;QACtB,MAAMW,IAAI,GAAG,IAAId,IAAI,CAACE,IAAI,EAAEC,IAAI,CAAC;QACjC,IAAI,CAACM,KAAK,CAACM,IAAI,CAACD,IAAI,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAE,OAAOA,CAAA,EAAS;IACd;IACA,KAAK,IAAIC,CAAC,GAAG,IAAI,CAACR,KAAK,CAACS,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC9C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAAC,IAAI,CAACR,KAAK,CAACQ,CAAC,CAAC,EAAE,IAAI,CAACR,KAAK,CAACU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAACV,KAAK,CAACU,CAAC,CAAC,EAAE,IAAI,CAACV,KAAK,CAACQ,CAAC,CAAC,CAAC;IACjE;EACF;EAEAM,QAAQA,CAAA,EAAgB;IACtB,IAAI,IAAI,CAACd,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;MAC3BM,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC3C,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAAChB,KAAK,CAACiB,GAAG,CAAC,CAAC;EACzB;EAEAC,SAASA,CAAA,EAAS;IAChB,IAAI,CAAClB,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACM,OAAO,CAAC,CAAC;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}