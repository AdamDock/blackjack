{"ast":null,"code":"var _jsxFileName = \"/Users/adamdockstader/repos/blackjack/my-app/src/components/cards.tsx\",\n  _s = $RefreshSig$();\n// Cards.tsx\nimport React, { useState, useEffect } from 'react';\nimport styles from '../index.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Card {\n  constructor(suit, rank) {\n    this.suit = void 0;\n    this.rank = void 0;\n    this.suit = suit;\n    this.rank = rank;\n  }\n  getImageUrl() {\n    const formattedRank = this.rank === '10' ? '0' : this.rank; // Handle '10' rank\n    return `https://www.deckofcardsapi.com/static/img/${formattedRank}${this.suit.charAt(0).toUpperCase()}.png`;\n  }\n}\nclass Deck {\n  constructor() {\n    this.cards = void 0;\n    this.cards = [];\n    this.initializeDeck();\n  }\n  initializeDeck() {\n    const suits = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\n    const ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    suits.forEach(suit => {\n      ranks.forEach(rank => {\n        const card = new Card(suit, rank);\n        this.cards.push(card);\n      });\n    });\n  }\n  shuffle() {\n    // Fisher-Yates shuffle algorithm\n    for (let i = this.cards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [this.cards[i], this.cards[j]] = [this.cards[j], this.cards[i]];\n    }\n  }\n  dealCard() {\n    if (this.cards.length === 0) {\n      console.error('No cards left in the deck.');\n      return null;\n    }\n    return this.cards.pop();\n  }\n  resetDeck() {\n    this.cards = [];\n    this.initializeDeck();\n    this.shuffle();\n  }\n}\nexport default function Cards() {\n  _s();\n  const [deck, setDeck] = useState(new Deck());\n  useEffect(() => {\n    // Shuffle the deck when the component mounts\n    deck.shuffle();\n  }, [deck]);\n  const dealCard = () => {\n    // Deal a card when the \"Deal\" button is clicked\n    const card = deck.dealCard();\n    if (card) {\n      console.log('Dealt Card:', card.toString());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dealer Score: 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Score: 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: deck.cards.slice(0, 2).map((card, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.getImageUrl(),\n          alt: card.toString(),\n          height: \"200\",\n          width: \"150\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: deck.cards.slice(2, 4).map((card, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.getImageUrl(),\n          alt: card.toString(),\n          height: \"200\",\n          width: \"150\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: dealCard,\n      children: \"Deal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Cards, \"JsUCRudlgmvC4Mye0JyCHJaOol0=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","constructor","suit","rank","getImageUrl","formattedRank","charAt","toUpperCase","Deck","cards","initializeDeck","suits","ranks","forEach","card","push","shuffle","i","length","j","Math","floor","random","dealCard","console","error","pop","resetDeck","Cards","_s","deck","setDeck","log","toString","children","className","column","row","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","index","src","alt","height","width","onClick","_c","$RefreshReg$"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/components/cards.tsx"],"sourcesContent":["// Cards.tsx\nimport React, { useState, useEffect } from 'react';\nimport styles from '../index.module.css';\n\nclass Card {\n  suit: string;\n  rank: string;\n\n  constructor(suit: string, rank: string) {\n    this.suit = suit;\n    this.rank = rank;\n  }\n\n  getImageUrl(): string {\n    const formattedRank = this.rank === '10' ? '0' : this.rank; // Handle '10' rank\n    return `https://www.deckofcardsapi.com/static/img/${formattedRank}${this.suit.charAt(0).toUpperCase()}.png`;\n  }\n}\n\nclass Deck {\n  cards: Card[];\n\n  constructor() {\n    this.cards = [];\n    this.initializeDeck();\n  }\n\n  initializeDeck(): void {\n    const suits: string[] = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\n    const ranks: string[] = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n\n    suits.forEach((suit) => {\n      ranks.forEach((rank) => {\n        const card = new Card(suit, rank);\n        this.cards.push(card);\n      });\n    });\n  }\n\n  shuffle(): void {\n    // Fisher-Yates shuffle algorithm\n    for (let i = this.cards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [this.cards[i], this.cards[j]] = [this.cards[j], this.cards[i]];\n    }\n  }\n\n  dealCard(): Card | null {\n    if (this.cards.length === 0) {\n      console.error('No cards left in the deck.');\n      return null;\n    }\n    return this.cards.pop()!;\n  }\n\n  resetDeck(): void {\n    this.cards = [];\n    this.initializeDeck();\n    this.shuffle();\n  }\n}\n\nexport default function Cards() {\n  const [deck, setDeck] = useState(new Deck());\n\n  useEffect(() => {\n    // Shuffle the deck when the component mounts\n    deck.shuffle();\n  }, [deck]);\n\n  const dealCard = () => {\n    // Deal a card when the \"Deal\" button is clicked\n    const card = deck.dealCard();\n    if (card) {\n      console.log('Dealt Card:', card.toString());\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.column}>\n        <div className={styles.row}>\n          <h2>Dealer Score: 0</h2>\n          <h2>Your Score: 0</h2>\n        </div>\n\n        <div className={styles.row}>\n          {deck.cards.slice(0, 2).map((card, index) => (\n            <img\n              key={index}\n              src={card.getImageUrl()}\n              alt={card.toString()}\n              height=\"200\"\n              width=\"150\"\n            />\n          ))}\n        </div>\n\n        <div className={styles.row}>\n          {deck.cards.slice(2, 4).map((card, index) => (\n            <img\n              key={index}\n              src={card.getImageUrl()}\n              alt={card.toString()}\n              height=\"200\"\n              width=\"150\"\n            />\n          ))}\n        </div>\n      </div>\n\n      <button onClick={dealCard}>Deal</button>\n    </>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,IAAI,CAAC;EAITC,WAAWA,CAACC,IAAY,EAAEC,IAAY,EAAE;IAAA,KAHxCD,IAAI;IAAA,KACJC,IAAI;IAGF,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;EAEAC,WAAWA,CAAA,EAAW;IACpB,MAAMC,aAAa,GAAG,IAAI,CAACF,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,CAACA,IAAI,CAAC,CAAC;IAC5D,OAAQ,6CAA4CE,aAAc,GAAE,IAAI,CAACH,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAE,MAAK;EAC7G;AACF;AAEA,MAAMC,IAAI,CAAC;EAGTP,WAAWA,CAAA,EAAG;IAAA,KAFdQ,KAAK;IAGH,IAAI,CAACA,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB;EAEAA,cAAcA,CAAA,EAAS;IACrB,MAAMC,KAAe,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;IACjE,MAAMC,KAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAE1FD,KAAK,CAACE,OAAO,CAAEX,IAAI,IAAK;MACtBU,KAAK,CAACC,OAAO,CAAEV,IAAI,IAAK;QACtB,MAAMW,IAAI,GAAG,IAAId,IAAI,CAACE,IAAI,EAAEC,IAAI,CAAC;QACjC,IAAI,CAACM,KAAK,CAACM,IAAI,CAACD,IAAI,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAE,OAAOA,CAAA,EAAS;IACd;IACA,KAAK,IAAIC,CAAC,GAAG,IAAI,CAACR,KAAK,CAACS,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC9C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAAC,IAAI,CAACR,KAAK,CAACQ,CAAC,CAAC,EAAE,IAAI,CAACR,KAAK,CAACU,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAACV,KAAK,CAACU,CAAC,CAAC,EAAE,IAAI,CAACV,KAAK,CAACQ,CAAC,CAAC,CAAC;IACjE;EACF;EAEAM,QAAQA,CAAA,EAAgB;IACtB,IAAI,IAAI,CAACd,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;MAC3BM,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC3C,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAAChB,KAAK,CAACiB,GAAG,CAAC,CAAC;EACzB;EAEAC,SAASA,CAAA,EAAS;IAChB,IAAI,CAAClB,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACM,OAAO,CAAC,CAAC;EAChB;AACF;AAEA,eAAe,SAASY,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtC,QAAQ,CAAC,IAAIe,IAAI,CAAC,CAAC,CAAC;EAE5Cd,SAAS,CAAC,MAAM;IACd;IACAoC,IAAI,CAACd,OAAO,CAAC,CAAC;EAChB,CAAC,EAAE,CAACc,IAAI,CAAC,CAAC;EAEV,MAAMP,QAAQ,GAAGA,CAAA,KAAM;IACrB;IACA,MAAMT,IAAI,GAAGgB,IAAI,CAACP,QAAQ,CAAC,CAAC;IAC5B,IAAIT,IAAI,EAAE;MACRU,OAAO,CAACQ,GAAG,CAAC,aAAa,EAAElB,IAAI,CAACmB,QAAQ,CAAC,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,oBACEpC,OAAA,CAAAE,SAAA;IAAAmC,QAAA,gBACErC,OAAA;MAAKsC,SAAS,EAAExC,MAAM,CAACyC,MAAO;MAAAF,QAAA,gBAC5BrC,OAAA;QAAKsC,SAAS,EAAExC,MAAM,CAAC0C,GAAI;QAAAH,QAAA,gBACzBrC,OAAA;UAAAqC,QAAA,EAAI;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB5C,OAAA;UAAAqC,QAAA,EAAI;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eAEN5C,OAAA;QAAKsC,SAAS,EAAExC,MAAM,CAAC0C,GAAI;QAAAH,QAAA,EACxBJ,IAAI,CAACrB,KAAK,CAACiC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC7B,IAAI,EAAE8B,KAAK,kBACtC/C,OAAA;UAEEgD,GAAG,EAAE/B,IAAI,CAACV,WAAW,CAAC,CAAE;UACxB0C,GAAG,EAAEhC,IAAI,CAACmB,QAAQ,CAAC,CAAE;UACrBc,MAAM,EAAC,KAAK;UACZC,KAAK,EAAC;QAAK,GAJNJ,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN5C,OAAA;QAAKsC,SAAS,EAAExC,MAAM,CAAC0C,GAAI;QAAAH,QAAA,EACxBJ,IAAI,CAACrB,KAAK,CAACiC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC7B,IAAI,EAAE8B,KAAK,kBACtC/C,OAAA;UAEEgD,GAAG,EAAE/B,IAAI,CAACV,WAAW,CAAC,CAAE;UACxB0C,GAAG,EAAEhC,IAAI,CAACmB,QAAQ,CAAC,CAAE;UACrBc,MAAM,EAAC,KAAK;UACZC,KAAK,EAAC;QAAK,GAJNJ,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5C,OAAA;MAAQoD,OAAO,EAAE1B,QAAS;MAAAW,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACxC,CAAC;AAEP;AAACZ,EAAA,CApDuBD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}