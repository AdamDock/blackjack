{"ast":null,"code":"import { Card } from './card';\nexport class Deck {\n  constructor() {\n    this.cards = void 0;\n    this.cards = [];\n    this.initializeDeck();\n  }\n  initializeDeck() {\n    const suits = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\n    const ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '0', 'J', 'Q', 'K', 'A'];\n    suits.forEach(suit => {\n      ranks.forEach(rank => {\n        const card = new Card(suit, rank);\n        this.cards.push(card);\n      });\n    });\n  }\n  shuffle() {\n    // Fisher-Yates shuffle algorithm\n    for (let i = this.cards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [this.cards[i], this.cards[j]] = [this.cards[j], this.cards[i]];\n    }\n  }\n  blackjack() {\n    const blackjackCards = this.cards.filter(card => card.value === 10 || card.value === 1);\n    this.cards = blackjackCards;\n  }\n  dealCard() {\n    if (this.cards.length === 0) {\n      console.error('No cards left in the deck.');\n      return null;\n    }\n    return this.cards.pop();\n  }\n  resetDeck() {\n    this.cards = [];\n    this.initializeDeck();\n    this.shuffle();\n  }\n}\nex;","map":{"version":3,"names":["Card","Deck","constructor","cards","initializeDeck","suits","ranks","forEach","suit","rank","card","push","shuffle","i","length","j","Math","floor","random","blackjack","blackjackCards","filter","value","dealCard","console","error","pop","resetDeck","ex"],"sources":["/Users/adamdockstader/repos/blackjack/src/components/Deck/deck.tsx"],"sourcesContent":["import { Card } from './card';\n\nexport class Deck {\n    cards: Card[];\n  \n    constructor() {\n      this.cards = [];\n      this.initializeDeck();\n    }\n  \n    initializeDeck(): void {\n      const suits: string[] = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\n      const ranks: string[] = ['2', '3', '4', '5', '6', '7', '8', '9', '0', 'J', 'Q', 'K', 'A'];\n  \n  \n      suits.forEach((suit) => {\n        ranks.forEach((rank) => {\n          const card = new Card(suit, rank);\n          this.cards.push(card);\n        });\n      });\n    }\n  \n    shuffle(): void {\n      // Fisher-Yates shuffle algorithm\n      for (let i = this.cards.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [this.cards[i], this.cards[j]] = [this.cards[j], this.cards[i]];\n      }\n    }\n    blackjack(): void {\n      const blackjackCards = this.cards.filter((card) => card.value === 10 || card.value === 1);\n      this.cards = blackjackCards;\n    }\n  \n    dealCard(): Card | null {\n      if (this.cards.length === 0) {\n        console.error('No cards left in the deck.');\n        return null;\n      }\n      return this.cards.pop()!;\n    }\n  \n    resetDeck(): void {\n      this.cards = [];\n      this.initializeDeck();\n      this.shuffle();\n    }\n  }\n\n  ex"],"mappings":"AAAA,SAASA,IAAI,QAAQ,QAAQ;AAE7B,OAAO,MAAMC,IAAI,CAAC;EAGdC,WAAWA,CAAA,EAAG;IAAA,KAFdC,KAAK;IAGH,IAAI,CAACA,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB;EAEAA,cAAcA,CAAA,EAAS;IACrB,MAAMC,KAAe,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;IACjE,MAAMC,KAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAGzFD,KAAK,CAACE,OAAO,CAAEC,IAAI,IAAK;MACtBF,KAAK,CAACC,OAAO,CAAEE,IAAI,IAAK;QACtB,MAAMC,IAAI,GAAG,IAAIV,IAAI,CAACQ,IAAI,EAAEC,IAAI,CAAC;QACjC,IAAI,CAACN,KAAK,CAACQ,IAAI,CAACD,IAAI,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAE,OAAOA,CAAA,EAAS;IACd;IACA,KAAK,IAAIC,CAAC,GAAG,IAAI,CAACV,KAAK,CAACW,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC9C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAAC,IAAI,CAACV,KAAK,CAACU,CAAC,CAAC,EAAE,IAAI,CAACV,KAAK,CAACY,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAACZ,KAAK,CAACY,CAAC,CAAC,EAAE,IAAI,CAACZ,KAAK,CAACU,CAAC,CAAC,CAAC;IACjE;EACF;EACAM,SAASA,CAAA,EAAS;IAChB,MAAMC,cAAc,GAAG,IAAI,CAACjB,KAAK,CAACkB,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACY,KAAK,KAAK,EAAE,IAAIZ,IAAI,CAACY,KAAK,KAAK,CAAC,CAAC;IACzF,IAAI,CAACnB,KAAK,GAAGiB,cAAc;EAC7B;EAEAG,QAAQA,CAAA,EAAgB;IACtB,IAAI,IAAI,CAACpB,KAAK,CAACW,MAAM,KAAK,CAAC,EAAE;MAC3BU,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC3C,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACtB,KAAK,CAACuB,GAAG,CAAC,CAAC;EACzB;EAEAC,SAASA,CAAA,EAAS;IAChB,IAAI,CAACxB,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACQ,OAAO,CAAC,CAAC;EAChB;AACF;AAEAgB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}