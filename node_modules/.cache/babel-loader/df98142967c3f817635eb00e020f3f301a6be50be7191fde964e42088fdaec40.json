{"ast":null,"code":"var _jsxFileName = \"/Users/adamdockstader/repos/blackjack/my-app/src/components/cards.tsx\";\nimport React from \"react\";\nimport styles from '../index.module.css';\n// Card.ts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Card {\n  constructor(suit, rank) {\n    this.suit = void 0;\n    this.rank = void 0;\n    this.suit = suit;\n    this.rank = rank;\n  }\n  toString() {\n    return `${this.rank} of ${this.suit}`;\n  }\n}\nclass Deck {\n  constructor() {\n    this.cards = void 0;\n    this.cards = [];\n    this.initializeDeck();\n  }\n  initializeDeck() {\n    const suits = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\n    const ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    suits.forEach(suit => {\n      ranks.forEach(rank => {\n        const card = new Card(suit, rank);\n        this.cards.push(card);\n      });\n    });\n  }\n  shuffle() {\n    // Fisher-Yates shuffle algorithm\n    for (let i = this.cards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [this.cards[i], this.cards[j]] = [this.cards[j], this.cards[i]];\n    }\n  }\n  dealCard() {\n    if (this.cards.length === 0) {\n      console.error('No cards left in the deck.');\n      return null;\n    }\n    return this.cards.pop();\n  }\n  resetDeck() {\n    this.cards = [];\n    this.initializeDeck();\n    this.shuffle();\n  }\n}\n\n// Example usage:\n\n// Create a new deck\nconst deck = new Deck();\nconsole.log(deck);\n\n// Shuffle the deck\ndeck.shuffle();\n\n// Deal a card\nconst card1 = deck.dealCard();\nconsole.log('Card 1:', card1 && card1.toString());\n\n// Deal another card\nconst card2 = deck.dealCard();\nconsole.log('Card 2:', card2.toString());\n\n// Reset the deck\ndeck.resetDeck();\nconsole.log('Deck after reset:', deck.cards);\nexport default function Cards() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dealer Score: 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Score: 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://deckofcardsapi.com/static/img/back.png\",\n          alt: \"poker chip\",\n          height: \"200\",\n          width: \"150\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://deckofcardsapi.com/static/img/back.png\",\n          alt: \"poker chip\",\n          height: \"200\",\n          width: \"150\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://deckofcardsapi.com/static/img/back.png\",\n          alt: \"poker chip\",\n          height: \"200\",\n          width: \"150\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://deckofcardsapi.com/static/img/back.png\",\n          alt: \"poker chip\",\n          height: \"200\",\n          width: \"150\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","constructor","suit","rank","toString","Deck","cards","initializeDeck","suits","ranks","forEach","card","push","shuffle","i","length","j","Math","floor","random","dealCard","console","error","pop","resetDeck","deck","log","card1","card2","Cards","children","className","column","row","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","height","width","_c","$RefreshReg$"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/components/cards.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styles from '../index.module.css';\n// Card.ts\nclass Card {\n    suit: string;\n    rank: string;\n  \n    constructor(suit: string, rank: string) {\n      this.suit = suit;\n      this.rank = rank;\n    }\n  \n    toString(): string {\n      return `${this.rank} of ${this.suit}`;\n    }\n  }\n  class Deck {\n    cards: Card[];\n  \n    constructor() {\n      this.cards = [];\n      this.initializeDeck();\n    }\n  \n    initializeDeck(): void {\n      const suits: string[] = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\n      const ranks: string[] = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  \n      suits.forEach((suit) => {\n        ranks.forEach((rank) => {\n          const card = new Card(suit, rank);\n          this.cards.push(card);\n        });\n      });\n    }\n  \n    shuffle(): void {\n      // Fisher-Yates shuffle algorithm\n      for (let i = this.cards.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [this.cards[i], this.cards[j]] = [this.cards[j], this.cards[i]];\n      }\n    }\n  \n    dealCard(): Card | null {\n      if (this.cards.length === 0) {\n        console.error('No cards left in the deck.');\n        return null;\n      }\n      return this.cards.pop()!;\n    }\n  \n    resetDeck(): void {\n      this.cards = [];\n      this.initializeDeck();\n      this.shuffle();\n    }\n  }\n  \n  // Example usage:\n  \n  // Create a new deck\n  const deck = new Deck();\n  console.log(deck);\n  \n  // Shuffle the deck\n  deck.shuffle();\n  \n  // Deal a card\n  const card1 = deck.dealCard();\n  console.log('Card 1:', card1 && card1.toString());\n  \n  // Deal another card\n  const card2 = deck.dealCard();\n  console.log('Card 2:',  card2.toString());\n  \n  // Reset the deck\n  deck.resetDeck();\n  console.log('Deck after reset:', deck.cards);\n  \n\nexport default function Cards(){\n\n    return (\n        <>\n        <div className={styles.column}>\n            <div className={styles.row}>\n        <h2>Dealer Score: 0</h2>\n        <h2>Your Score: 0</h2>\n        </div>\n        \n\n\n            <div className={styles.row}>  \n            \n \n                <img\n                src=\"https://deckofcardsapi.com/static/img/back.png\"\n                alt=\"poker chip\"\n                height=\"200\"\n                width=\"150\"\n            />\n             <img\n                src=\"https://deckofcardsapi.com/static/img/back.png\"\n                alt=\"poker chip\"\n                height=\"200\"\n                width=\"150\"\n            />\n\n            \n            </div>\n           \n            <div className={styles.row}>\n            \n\n                <img\n                src=\"https://deckofcardsapi.com/static/img/back.png\"\n                alt=\"poker chip\"\n                height=\"200\"\n                width=\"150\"\n            />\n             <img\n                src=\"https://deckofcardsapi.com/static/img/back.png\"\n                alt=\"poker chip\"\n                height=\"200\"\n                width=\"150\"\n            />\n\n                \n            </div>\n        </div>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}