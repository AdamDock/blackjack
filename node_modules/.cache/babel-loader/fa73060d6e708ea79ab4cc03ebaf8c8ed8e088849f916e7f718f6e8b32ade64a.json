{"ast":null,"code":"var _jsxFileName = \"/Users/adamdockstader/repos/blackjack/my-app/src/components/betting.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from '../index.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Betting() {\n  _s();\n  const [betTotal, setBetTotal] = useState(0);\n  const [earnings, setEarnings] = useState(1000); // Initial earnings\n\n  const handleChipClick = amount => {\n    // Ensure betTotal doesn't exceed earnings\n    if (betTotal + amount > earnings) {\n      setBetTotal(earnings);\n    } else {\n      setBetTotal(prevBetTotal => prevBetTotal + amount);\n    }\n\n    // Deduct the bet from earnings\n    setEarnings(prevEarnings => prevEarnings - amount);\n  };\n  const chip = amount => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chipcontainer,\n    onClick: () => handleChipClick(amount),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textstyle,\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/pokerchip.png\",\n      alt: \"poker chip\",\n      width: \"100%\",\n      height: \"100%\",\n      className: styles.imageStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.row,\n    children: [chip(1), chip(5), chip(10), chip(25), chip(100), chip(500), chip(1000), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.info,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bet Total: \", betTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Earnings: \", earnings]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Betting, \"7BF29Jcf0D7MdqTwTcfiRFdtkec=\");\n_c = Betting;\nvar _c;\n$RefreshReg$(_c, \"Betting\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Betting","_s","betTotal","setBetTotal","earnings","setEarnings","handleChipClick","amount","prevBetTotal","prevEarnings","chip","className","chipcontainer","onClick","children","textstyle","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","imageStyle","row","info","_c","$RefreshReg$"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/components/betting.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from '../index.module.css';\n\nexport default function Betting() {\n  const [betTotal, setBetTotal] = useState(0);\n  const [earnings, setEarnings] = useState(1000); // Initial earnings\n\n  const handleChipClick = (amount) => {\n    // Ensure betTotal doesn't exceed earnings\n    if (betTotal + amount > earnings) {\n      setBetTotal(earnings);\n    } else {\n      setBetTotal((prevBetTotal) => prevBetTotal + amount);\n    }\n\n    // Deduct the bet from earnings\n    setEarnings((prevEarnings) => prevEarnings - amount);\n  };\n\n  const chip = (amount) => (\n    <div\n      className={styles.chipcontainer}\n      onClick={() => handleChipClick(amount)}\n    >\n      <div className={styles.textstyle}>{amount}</div>\n      <img\n        src=\"/pokerchip.png\"\n        alt=\"poker chip\"\n        width=\"100%\"\n        height=\"100%\"\n        className={styles.imageStyle}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.row}>\n      {chip(1)}\n      {chip(5)}\n      {chip(10)}\n      {chip(25)}\n      {chip(100)}\n      {chip(500)}\n      {chip(1000)}\n      <div className={styles.info}>\n        <p>Bet Total: {betTotal}</p>\n        <p>Earnings: {earnings}</p>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD,MAAMU,eAAe,GAAIC,MAAM,IAAK;IAClC;IACA,IAAIL,QAAQ,GAAGK,MAAM,GAAGH,QAAQ,EAAE;MAChCD,WAAW,CAACC,QAAQ,CAAC;IACvB,CAAC,MAAM;MACLD,WAAW,CAAEK,YAAY,IAAKA,YAAY,GAAGD,MAAM,CAAC;IACtD;;IAEA;IACAF,WAAW,CAAEI,YAAY,IAAKA,YAAY,GAAGF,MAAM,CAAC;EACtD,CAAC;EAED,MAAMG,IAAI,GAAIH,MAAM,iBAClBR,OAAA;IACEY,SAAS,EAAEd,MAAM,CAACe,aAAc;IAChCC,OAAO,EAAEA,CAAA,KAAMP,eAAe,CAACC,MAAM,CAAE;IAAAO,QAAA,gBAEvCf,OAAA;MAAKY,SAAS,EAAEd,MAAM,CAACkB,SAAU;MAAAD,QAAA,EAAEP;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChDpB,OAAA;MACEqB,GAAG,EAAC,gBAAgB;MACpBC,GAAG,EAAC,YAAY;MAChBC,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,MAAM;MACbZ,SAAS,EAAEd,MAAM,CAAC2B;IAAW;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CACN;EAED,oBACEpB,OAAA;IAAKY,SAAS,EAAEd,MAAM,CAAC4B,GAAI;IAAAX,QAAA,GACxBJ,IAAI,CAAC,CAAC,CAAC,EACPA,IAAI,CAAC,CAAC,CAAC,EACPA,IAAI,CAAC,EAAE,CAAC,EACRA,IAAI,CAAC,EAAE,CAAC,EACRA,IAAI,CAAC,GAAG,CAAC,EACTA,IAAI,CAAC,GAAG,CAAC,EACTA,IAAI,CAAC,IAAI,CAAC,eACXX,OAAA;MAAKY,SAAS,EAAEd,MAAM,CAAC6B,IAAK;MAAAZ,QAAA,gBAC1Bf,OAAA;QAAAe,QAAA,GAAG,aAAW,EAACZ,QAAQ;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BpB,OAAA;QAAAe,QAAA,GAAG,YAAU,EAACV,QAAQ;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CA/CuBD,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}