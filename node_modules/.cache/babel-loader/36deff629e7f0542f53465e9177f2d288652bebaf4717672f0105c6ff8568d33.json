{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst playerSlice = createSlice({\n  name: 'player',\n  initialState: {\n    hand: [],\n    hand2: [],\n    score: 0,\n    score2: 0,\n    bet: 0\n  },\n  reducers: {\n    playerDealCard: (state, action) => {\n      state.hand.push(action.payload);\n      state.score += action.payload.value;\n    },\n    playerDealCard2: (state, action) => {\n      state.hand2.push(action.payload);\n      state.score2 += action.payload.value;\n    },\n    playerSplit: state => {\n      state.hand2.push(state.hand.pop());\n      state.score -= state.hand2[0].value;\n    },\n    setPlayerBet: (state, action) => {\n      state.bet = action.payload;\n    },\n    resetPlayerHand: state => {\n      state.hand = [];\n      state.hand2 = [];\n      state.score = 0;\n      state.score2 = 0;\n      bet;\n    }\n  }\n});\nexport const {\n  playerDealCard,\n  playerDealCard2,\n  setPlayerScore,\n  setPlayerBet,\n  playerSplit\n} = playerSlice.actions;\nexport const playerReducer = playerSlice.reducer;","map":{"version":3,"names":["createSlice","playerSlice","name","initialState","hand","hand2","score","score2","bet","reducers","playerDealCard","state","action","push","payload","value","playerDealCard2","playerSplit","pop","setPlayerBet","resetPlayerHand","setPlayerScore","actions","playerReducer","reducer"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/store/slices/playerSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst playerSlice = createSlice({\n    name: 'player',\n    initialState: {\n        hand: [],\n        hand2: [],\n        score: 0,\n        score2: 0,\n        bet: 0,\n    },\n    reducers: {\n        playerDealCard: (state, action) => {\n            state.hand.push(action.payload);\n            state.score += action.payload.value;\n        },\n        playerDealCard2: (state, action) => {\n            state.hand2.push(action.payload);\n            state.score2 += action.payload.value;\n        },\n        playerSplit: (state) => {\n            state.hand2.push(state.hand.pop());\n            state.score -= state.hand2[0].value;\n        },\n        setPlayerBet: (state, action) => {\n            state.bet = action.payload;\n        },\n        resetPlayerHand: (state) => {   \n            state.hand = [];\n            state.hand2 = [];\n            state.score = 0;\n            state.score2 = 0;\n            bet\n        }\n        \n    },\n});\n\nexport const { playerDealCard, playerDealCard2, setPlayerScore, setPlayerBet, playerSplit } = playerSlice.actions;\nexport const playerReducer = playerSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,GAAG,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACNC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACP,IAAI,CAACS,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC/BH,KAAK,CAACL,KAAK,IAAIM,MAAM,CAACE,OAAO,CAACC,KAAK;IACvC,CAAC;IACDC,eAAe,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACN,KAAK,CAACQ,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAChCH,KAAK,CAACJ,MAAM,IAAIK,MAAM,CAACE,OAAO,CAACC,KAAK;IACxC,CAAC;IACDE,WAAW,EAAGN,KAAK,IAAK;MACpBA,KAAK,CAACN,KAAK,CAACQ,IAAI,CAACF,KAAK,CAACP,IAAI,CAACc,GAAG,CAAC,CAAC,CAAC;MAClCP,KAAK,CAACL,KAAK,IAAIK,KAAK,CAACN,KAAK,CAAC,CAAC,CAAC,CAACU,KAAK;IACvC,CAAC;IACDI,YAAY,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACH,GAAG,GAAGI,MAAM,CAACE,OAAO;IAC9B,CAAC;IACDM,eAAe,EAAGT,KAAK,IAAK;MACxBA,KAAK,CAACP,IAAI,GAAG,EAAE;MACfO,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACL,KAAK,GAAG,CAAC;MACfK,KAAK,CAACJ,MAAM,GAAG,CAAC;MAChBC,GAAG;IACP;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,cAAc;EAAEM,eAAe;EAAEK,cAAc;EAAEF,YAAY;EAAEF;AAAY,CAAC,GAAGhB,WAAW,CAACqB,OAAO;AACjH,OAAO,MAAMC,aAAa,GAAGtB,WAAW,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}