{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const gameSlice=createSlice({name:'game',initialState:{betStage:true,dealStage:false,evaluateStage:false,splitActive:false,hand1dealt:false,dealerTurnComplete:false,gameScore:0,textOutcome:'',textOutcome2:'',gameOver:false,hands:0,handsWon:0,handsLost:0},reducers:{setBetStage:(state,action)=>{state.betStage=action.payload;},setDealStage:(state,action)=>{state.dealStage=action.payload;},setEvaluateStage:(state,action)=>{state.evaluateStage=action.payload;},setScore:(state,action)=>{state.gameScore+=action.payload;console.log(\"gamescore: \",state.gameScore);},setSplitActive:(state,action)=>{state.splitActive=action.payload;state.hand2deal=action.payload;},setTextOutcome:(state,action)=>{state.textOutcome=action.payload;},setDealerTurnComplete:(state,action)=>{state.dealerTurnComplete=action.payload;},setGameOver:(state,action)=>{state.gameOver=action.payload;},setHandsWon:state=>{state.handsWon++;state.hands++;},setHandsLost:state=>{state.handsLost++;state.hands++;},setHand1Dealt:(state,action)=>{state.hand1dealt=action.payload;},setTextOutcome2:(state,action)=>{state.textOutcome2=action.payload;}}});export const{setTextOutcome2,setHand1Dealt,setHandsLost,setHandsWon,setGameOver,setDealerTurnComplete,setBetStage,setDealStage,setEvaluateStage,setScore,setSplitActive,setTextOutcome}=gameSlice.actions;export const gameReducer=gameSlice.reducer;","map":{"version":3,"names":["createSlice","gameSlice","name","initialState","betStage","dealStage","evaluateStage","splitActive","hand1dealt","dealerTurnComplete","gameScore","textOutcome","textOutcome2","gameOver","hands","handsWon","handsLost","reducers","setBetStage","state","action","payload","setDealStage","setEvaluateStage","setScore","console","log","setSplitActive","hand2deal","setTextOutcome","setDealerTurnComplete","setGameOver","setHandsWon","setHandsLost","setHand1Dealt","setTextOutcome2","actions","gameReducer","reducer"],"sources":["/Users/adamdockstader/repos/blackjack/src/store/slices/gameSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst gameSlice = createSlice({\n    name: 'game',\n    initialState: {\n        betStage: true,\n        dealStage: false,\n        evaluateStage: false,\n        splitActive: false,\n        hand1dealt: false,\n        dealerTurnComplete: false,\n        gameScore: 0,\n        textOutcome: '',\n        textOutcome2: '',\n        gameOver: false,\n        hands: 0,\n        handsWon: 0,\n        handsLost: 0,\n    },\n    reducers: {\n        setBetStage: (state, action) => {\n            state.betStage = action.payload;\n        },\n        setDealStage: (state, action) => {\n            state.dealStage = action.payload;\n        },\n        setEvaluateStage: (state, action) => {\n            state.evaluateStage = action.payload;\n        },\n        setScore: (state, action) => {\n            state.gameScore += action.payload;\n            console.log(\"gamescore: \", state.gameScore);\n        },\n        setSplitActive: (state, action) => {\n            state.splitActive = action.payload;\n            state.hand2deal = action.payload;\n        },\n        setTextOutcome: (state, action) => {\n            state.textOutcome = action.payload;\n        },\n        setDealerTurnComplete: (state, action) => {\n            state.dealerTurnComplete = action.payload;\n        },\n        setGameOver: (state, action) => {\n            state.gameOver = action.payload;\n        },  \n        setHandsWon: (state) => {\n            state.handsWon++;\n            state.hands++;\n        },\n        setHandsLost: (state) => {\n            state.handsLost++;\n            state.hands++;\n        },\n        setHand1Dealt: (state, action) => {\n            state.hand1dealt = action.payload;\n        },\n        setTextOutcome2: (state, action) => {\n            state.textOutcome2 = action.payload;\n        },\n        \n    },\n});\n\nexport const { setTextOutcome2, setHand1Dealt, setHandsLost, setHandsWon, setGameOver, setDealerTurnComplete, setBetStage, setDealStage, setEvaluateStage, setScore, setSplitActive, setTextOutcome } = gameSlice.actions;\nexport const gameReducer = gameSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,SAAS,CAAGD,WAAW,CAAC,CAC1BE,IAAI,CAAE,MAAM,CACZC,YAAY,CAAE,CACVC,QAAQ,CAAE,IAAI,CACdC,SAAS,CAAE,KAAK,CAChBC,aAAa,CAAE,KAAK,CACpBC,WAAW,CAAE,KAAK,CAClBC,UAAU,CAAE,KAAK,CACjBC,kBAAkB,CAAE,KAAK,CACzBC,SAAS,CAAE,CAAC,CACZC,WAAW,CAAE,EAAE,CACfC,YAAY,CAAE,EAAE,CAChBC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,CAAC,CACRC,QAAQ,CAAE,CAAC,CACXC,SAAS,CAAE,CACf,CAAC,CACDC,QAAQ,CAAE,CACNC,WAAW,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC5BD,KAAK,CAACf,QAAQ,CAAGgB,MAAM,CAACC,OAAO,CACnC,CAAC,CACDC,YAAY,CAAEA,CAACH,KAAK,CAAEC,MAAM,GAAK,CAC7BD,KAAK,CAACd,SAAS,CAAGe,MAAM,CAACC,OAAO,CACpC,CAAC,CACDE,gBAAgB,CAAEA,CAACJ,KAAK,CAAEC,MAAM,GAAK,CACjCD,KAAK,CAACb,aAAa,CAAGc,MAAM,CAACC,OAAO,CACxC,CAAC,CACDG,QAAQ,CAAEA,CAACL,KAAK,CAAEC,MAAM,GAAK,CACzBD,KAAK,CAACT,SAAS,EAAIU,MAAM,CAACC,OAAO,CACjCI,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEP,KAAK,CAACT,SAAS,CAAC,CAC/C,CAAC,CACDiB,cAAc,CAAEA,CAACR,KAAK,CAAEC,MAAM,GAAK,CAC/BD,KAAK,CAACZ,WAAW,CAAGa,MAAM,CAACC,OAAO,CAClCF,KAAK,CAACS,SAAS,CAAGR,MAAM,CAACC,OAAO,CACpC,CAAC,CACDQ,cAAc,CAAEA,CAACV,KAAK,CAAEC,MAAM,GAAK,CAC/BD,KAAK,CAACR,WAAW,CAAGS,MAAM,CAACC,OAAO,CACtC,CAAC,CACDS,qBAAqB,CAAEA,CAACX,KAAK,CAAEC,MAAM,GAAK,CACtCD,KAAK,CAACV,kBAAkB,CAAGW,MAAM,CAACC,OAAO,CAC7C,CAAC,CACDU,WAAW,CAAEA,CAACZ,KAAK,CAAEC,MAAM,GAAK,CAC5BD,KAAK,CAACN,QAAQ,CAAGO,MAAM,CAACC,OAAO,CACnC,CAAC,CACDW,WAAW,CAAGb,KAAK,EAAK,CACpBA,KAAK,CAACJ,QAAQ,EAAE,CAChBI,KAAK,CAACL,KAAK,EAAE,CACjB,CAAC,CACDmB,YAAY,CAAGd,KAAK,EAAK,CACrBA,KAAK,CAACH,SAAS,EAAE,CACjBG,KAAK,CAACL,KAAK,EAAE,CACjB,CAAC,CACDoB,aAAa,CAAEA,CAACf,KAAK,CAAEC,MAAM,GAAK,CAC9BD,KAAK,CAACX,UAAU,CAAGY,MAAM,CAACC,OAAO,CACrC,CAAC,CACDc,eAAe,CAAEA,CAAChB,KAAK,CAAEC,MAAM,GAAK,CAChCD,KAAK,CAACP,YAAY,CAAGQ,MAAM,CAACC,OAAO,CACvC,CAEJ,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEc,eAAe,CAAED,aAAa,CAAED,YAAY,CAAED,WAAW,CAAED,WAAW,CAAED,qBAAqB,CAAEZ,WAAW,CAAEI,YAAY,CAAEC,gBAAgB,CAAEC,QAAQ,CAAEG,cAAc,CAAEE,cAAe,CAAC,CAAG5B,SAAS,CAACmC,OAAO,CACzN,MAAO,MAAM,CAAAC,WAAW,CAAGpC,SAAS,CAACqC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}