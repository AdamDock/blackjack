{"ast":null,"code":"var _jsxFileName = \"/Users/adamdockstader/repos/blackjack/my-app/src/components/betting.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from '../index.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Betting = ({\n  betAmountChange,\n  stackAmountChange,\n  winning\n}) => {\n  _s();\n  const [pot, setPot] = useState(0);\n  const [stack, setStack] = useState(5000);\n  const [win, setWin] = useState(0);\n  setW;\n  setStack(stack + winning);\n  const handleChipClick = amount => {\n    // Check if the bet amount is within the remaining stack\n    if (amount <= stack) {\n      setPot(prevPot => prevPot + amount);\n      setStack(prevStack => prevStack - amount);\n    } else {\n      // Display alert if the bet amount is more than the remaining stack\n      alert(\"More than remaining bet amount. Try again.\");\n    }\n  };\n  const handleResetClick = () => {\n    // Move all chips from the pot back to the stack\n    setStack(prevStack => prevStack + pot);\n    setPot(0);\n  };\n  const handleAllInClick = () => {\n    // Move all chips from the stack to the pot\n    setPot(prevPot => prevPot + stack);\n    setStack(0);\n  };\n  const chip = amount => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chipcontainer,\n    onClick: () => handleChipClick(amount),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textstyle,\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/pokerchip.png\",\n      alt: \"poker chip\",\n      width: \"100%\",\n      height: \"100%\",\n      className: styles.imageStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n  const allinchip = amount => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chipcontainer,\n    onClick: () => handleAllInClick(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textstyle,\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/pokerchip.png\",\n      alt: \"poker chip\",\n      width: \"100%\",\n      height: \"100%\",\n      className: styles.imageStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n  const resetchip = amount => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chipcontainer,\n    onClick: () => handleResetClick(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textstyle,\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/pokerchip.png\",\n      alt: \"poker chip\",\n      width: \"100%\",\n      height: \"100%\",\n      className: styles.imageStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n  betAmountChange(pot);\n  stackAmountChange(stack);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.row,\n    children: [chip(1), chip(5), chip(10), chip(25), chip(100), chip(500), chip(1000), allinchip(\"All in\"), resetchip(\"Reset\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Betting, \"TVnYbLTbJgzdlds4iIgkcJ+cWnw=\");\n_c = Betting;\nexport default Betting;\nvar _c;\n$RefreshReg$(_c, \"Betting\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Betting","betAmountChange","stackAmountChange","winning","_s","pot","setPot","stack","setStack","win","setWin","setW","handleChipClick","amount","prevPot","prevStack","alert","handleResetClick","handleAllInClick","chip","className","chipcontainer","onClick","children","textstyle","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","imageStyle","allinchip","resetchip","row","_c","$RefreshReg$"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/components/betting.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from '../index.module.css';\n\ninterface BettingProps {\n  betAmountChange: (betAmountFromChild: number) => void;\n  stackAmountChange: (stackAmountFromChild: number) => void;\n  winning: number;\n}\n\nconst Betting: React.FC<BettingProps> = ({betAmountChange, stackAmountChange, winning}) => {\n  const [pot, setPot] = useState<number>(0);\n  const [stack, setStack] = useState<number>(5000);\n  const [win, setWin] = useState<number>(0);\n  setW\n  setStack(stack + winning);\n\n  const handleChipClick = (amount: number): void => {\n    // Check if the bet amount is within the remaining stack\n    if (amount <= stack) {\n      setPot((prevPot) => prevPot + amount);\n      setStack((prevStack) => prevStack - amount);\n    } else {\n      // Display alert if the bet amount is more than the remaining stack\n      alert(\"More than remaining bet amount. Try again.\");\n    }\n  };\n\n  const handleResetClick = (): void => {\n    // Move all chips from the pot back to the stack\n    setStack((prevStack) => prevStack + pot);\n    setPot(0);\n  };\n\n  const handleAllInClick = (): void => {\n    // Move all chips from the stack to the pot\n    setPot((prevPot) => prevPot + stack);\n    setStack(0);\n  };\n\n  const chip = (amount: number): JSX.Element => (\n    <div\n      className={styles.chipcontainer}\n      onClick={() => handleChipClick(amount)}\n    >\n      <div className={styles.textstyle}>{amount}</div>\n      <img\n        src=\"/pokerchip.png\"\n        alt=\"poker chip\"\n        width=\"100%\"\n        height=\"100%\"\n        className={styles.imageStyle}\n      />\n    </div>\n  );\n  const allinchip = (amount: string): JSX.Element => (\n    <div\n      className={styles.chipcontainer}\n      onClick={() => handleAllInClick()}\n    >\n      <div className={styles.textstyle}>{amount}</div>\n      <img\n        src=\"/pokerchip.png\"\n        alt=\"poker chip\"\n        width=\"100%\"\n        height=\"100%\"\n        className={styles.imageStyle}\n      />\n    </div>\n  );\n  const resetchip = (amount: string): JSX.Element => (\n    <div\n      className={styles.chipcontainer}\n      onClick={() => handleResetClick()}\n    >\n      <div className={styles.textstyle}>{amount}</div>\n      <img\n        src=\"/pokerchip.png\"\n        alt=\"poker chip\"\n        width=\"100%\"\n        height=\"100%\"\n        className={styles.imageStyle}\n      />\n    </div>\n  );\n  betAmountChange(pot);\n  stackAmountChange(stack);\n  \n\n  return (\n    <div className={styles.row}>\n      {chip(1)}\n      {chip(5)}\n      {chip(10)}\n      {chip(25)}\n      {chip(100)}\n      {chip(500)}\n      {chip(1000)}\n      {allinchip(\"All in\")}\n      {resetchip(\"Reset\")}\n    </div>\n  );\n};\n\nexport default Betting;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}