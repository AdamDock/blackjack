{"ast":null,"code":"var _jsxFileName = \"/Users/adamdockstader/repos/blackjack/my-app/src/components/Cards/PlayerHand.tsx\",\n  _s = $RefreshSig$();\nimport Card from \"./Cards\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerHand = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    hand,\n    hand2,\n    score\n  } = useSelector(state => state.player);\n  const {\n    betStage\n  } = useSelector(state => state.game);\n  const {\n    splitActive\n  } = useSelector(state => state.game);\n  console.log(hand);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex \",\n        children: [!betStage && !splitActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: hand.map(card => /*#__PURE__*/_jsxDEV(Card, {\n            code: card.code\n          }, card.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 7\n          }, this))\n        }, void 0, false) : !betStage && splitActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: hand.map(card => /*#__PURE__*/_jsxDEV(Card, {\n                code: card.code\n              }, card.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: hand2.map(card => /*#__PURE__*/_jsxDEV(Card, {\n                code: card.code\n              }, card.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 5\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            code: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            code: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"PlayerScore: \", score, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerHand, \"dZOGVn9dnh6xwBNBl8M+p9W9wFA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = PlayerHand;\nexport default PlayerHand;\nvar _c;\n$RefreshReg$(_c, \"PlayerHand\");","map":{"version":3,"names":["Card","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerHand","_s","dispatch","hand","hand2","score","state","player","betStage","game","splitActive","console","log","children","className","map","card","code","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adamdockstader/repos/blackjack/my-app/src/components/Cards/PlayerHand.tsx"],"sourcesContent":["import Card from \"./Cards\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nconst PlayerHand = ()=>{\n    const dispatch = useDispatch();\n    const {hand, hand2, score} = useSelector((state: any) => state.player);\n    const {betStage} = useSelector((state: any) => state.game);\n    const {splitActive} = useSelector((state: any) => state.game);\n    console.log(hand);\n\n    return (\n        <div>\n          <div>  \n            <div className=\"flex \">  \n            {!betStage && !splitActive ?\n  <>\n    {hand.map((card: any) => (\n      <Card key={card.code} code={card.code} />\n    ))}\n  </> : !betStage && splitActive ?\n  <>\n    <div className=\"flex justify-between\">\n      <div className=\"\">\n        {hand.map((card: any) => (\n          <Card key={card.code} code={card.code} />\n        ))}\n      </div>\n      \n      <div>\n        {hand2.map((card: any) => (\n          <Card key={card.code} code={card.code} />\n        ))}\n      </div>\n    </div>\n  </> :\n  <>\n    <Card code={\"back\"} />\n    <Card code={\"back\"} />\n  </>\n}\n\n              <h2>PlayerScore: {score} </h2>\n            </div>\n            </div>\n\n        </div>\n    )\n  }\n  export default PlayerHand;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}